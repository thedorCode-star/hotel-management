// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  // Add Vercel-specific configuration
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(GUEST)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  bookings Booking[]
  reviews  Review[]

  @@map("users")
}

model Room {
  id          String      @id @default(cuid())
  number      String      @unique
  type        RoomType
  capacity    Int
  price       Float
  description String?
  status      RoomStatus  @default(AVAILABLE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  bookings Booking[]
  reviews  Review[]

  @@map("rooms")
}

model Booking {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  checkIn   DateTime
  checkOut  DateTime
  status    BookingStatus @default(PENDING)
  totalPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("bookings")
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  rating    Int      @db.SmallInt
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("reviews")
}

enum UserRole {
  ADMIN
  STAFF
  GUEST
}

enum RoomType {
  SINGLE
  DOUBLE
  SUITE
  DELUXE
}

enum RoomStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  RESERVED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
